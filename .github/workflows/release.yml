name: Release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: "Prerelease"
        required: true
        default: false
        type: boolean
      draft:
        description: "Draft"
        required: true
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  release:
    name: Version Bump and Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTOMATION_USER_TOKEN }}
          fetch-depth: 0

      - name: Get latest non-prerelease release
        id: latestrelease
        uses: cardinalby/git-get-release-action@v1
        with:
          latest: true
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get next version
        id: semverbump
        uses: WyriHaximus/github-action-next-semvers@v1.2.1
        with:
          version: ${{ steps.latestrelease.outputs.tag_name }}

      - name: Update Version in code
        run: |
          sed -i "s/\$this->container\['sdk_version'\] = '[0-9]\+\.[0-9]\+\.[0-9]\+';/\$this->container['sdk_version'] = '${{steps.semverbump.outputs.minor}}';/g" ./lib/Model/UserData.php

      - name: Commit version change
        run: |
          git config --global user.email "github-tracker-bot@taplytics.com"
          git config --global user.name "DevCycle Automation"
          git add ./lib/Model/UserData.php
          git commit -m "Release ${{steps.semverbump.outputs.minor}}"

      - name: Push version change
        run: |
          git push origin HEAD:main
        if: inputs.prerelease != true && inputs.draft != true

      - name: Push version change (prerelease)
        run: |
          git branch --force --track ${BRANCH}
          git push origin ${BRANCH}
        env:
          BRANCH: prerelease-${{ steps.semverbump.outputs.minor }}
        if: inputs.prerelease == true && inputs.draft != true

      - name: Release SDK
        uses: DevCycleHQ/release-action/gh-release@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ github.event.inputs.prerelease }}
          draft: ${{ github.event.inputs.draft }}

      # Trigger packagist.org after we do the internal release as it will pull 
      # data from the current state of the GitHub repo
      - name: Release to Packagist
        uses: joelwmale/webhook-action@2.3.2
        with:
          url: https://packagist.org/api/github?username=DevCycle&apiToken=${{secrets.packagistToken}}
          headers: '{"Content-Type": "application/json"}'
          body: '{"repository": {"url": "https://github.com/DevCycleHQ/php-server-sdk"}}'
        if: inputs.prerelease != true && inputs.draft != true
